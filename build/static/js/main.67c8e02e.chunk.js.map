{"version":3,"sources":["components/pages/Home.js","layouts/Navbar.js","redux/types/postsTypes.js","components/posts/Posts.js","redux/actions/posts.js","components/auth/Login.js","components/auth/Signup.js","layouts/Router.js","App.js","reportWebVitals.js","redux/reducers/posts.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["Home","Component","Navbar","className","to","type","id","GET_POSTS","Posts","this","props","get_posts","href","posts","map","post","title","content","connect","state","dispatch","axios","get","then","res","payload","data","catch","err","console","log","Login","Signup","Router","element","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67c8e02e.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Home extends Component {\n    render() {\n        return (\n            <div>\n                <h2>I am HomePage</h2>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nexport class Navbar extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <div className=\"container-fluid\">\n                        <Link className=\"navbar-brand\" to=\"/\">CrudApp</Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                            <div className=\"navbar-nav m-auto\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                                <Link className=\"nav-link\" to=\"/posts\">Post</Link>\n                                <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n                                <Link className=\"nav-link\" to='/login'>Login</Link>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Navbar\n","export const GET_POSTS = \"GET_POSTS\";","import React, { Component } from 'react';\nimport { get_posts } from '../../redux/actions/posts'\nimport { connect } from 'react-redux';\n\nexport class Posts extends Component {\n\n    componentDidMount(){\n        this.props.get_posts()\n    }\n\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center my-3\">All Posts</h2>\n                <div className=\"text-center\">\n                    <a href=\"./addPosts.html\" className=\"btn btn-dark\">Add Post</a>\n                </div>\n                <table className=\"table-striped table\">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Content</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.posts.map(post=>(\n                        <tr key={post.id}>\n                            <td>{post.title}</td>\n                            <td>{post.content}</td>\n                            <td><a href=\"./updatepost.html\" className=\"btn btn-secondary btn-sm\">Update</a></td>\n                            <td><a href=\"./deletepost.html\" className=\"btn btn-sm btn-danger\">Delete</a></td>\n                        </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts:state.posts.posts\n})\n\nexport default connect(mapStateToProps,{get_posts})(Posts);\n","import axios from \"axios\";\nimport { GET_POSTS } from \"../types/postsTypes\";\n\nexport const get_posts = () => dispatch =>{\n    axios.get('http://localhost:8000/post/')\n    .then(res=>(\n        dispatch({\n            type : GET_POSTS,\n            payload : res.data\n        })\n    )).catch(err=>console.log(err))\n}","import React, { Component } from 'react'\n\nexport class Login extends Component {\n    render() {\n        return (\n            <div>\n                <h2>I am Login</h2>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import React, { Component } from 'react'\n\nexport class Signup extends Component {\n    render() {\n        return (\n            <div>\n                <h2>I am Signup</h2>\n            </div>\n        )\n    }\n}\n\nexport default Signup\n","import React, { Component } from 'react';\nimport { Routes as Switch,Route } from 'react-router-dom';\nimport Home from '../components/pages/Home';\nimport Navbar from './Navbar';\nimport Posts from '../components/posts/Posts'\nimport Login from '../components/auth/Login';\nimport Signup from '../components/auth/Signup';\n\nexport class Router extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Switch>\n                    <Route element={<Home/>} path='/' exact />\n                    <Route element={<Posts/>} path='/posts' />\n                    <Route element={<Signup/>} path='/signup' />\n                    <Route element={<Login/>} path='/login' />\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default Router\n","import React, { Component } from 'react'\nimport Router from './layouts/Router'\nimport './App.css'\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_POSTS } from \"../types/postsTypes\";\n\nconst initialState = {\n    posts : []\n}\n\n// eslint-disable-next-line\nexport default function(state=initialState,action){\n    switch(action.type){\n        case GET_POSTS:\n            return{\n                ...state,\n                posts:action.payload\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport posts from './posts'\n\nexport default combineReducers({\n    posts\n})","import {createStore,applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk]\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}